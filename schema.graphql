# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type ConversationEntity {
  date: Date!
  id: ID!
  text: String!
  user: UserEntity!
}

type DocumentEntity {
  data: JSON!
  dueDate: Date!
  id: ID!
  name: String!
  priority: DocumentPriority!
  project: ProjectEntity!
  status: DocumentStatus!
  type: DocumentType!
  user: UserEntity!
}

type InviteEntity {
  active: Boolean!
  date: Date!
  id: ID!
  invitedByUser: UserEntity!
  invitedUser: UserEntity!
  invitedUserEmail: String!
  project: ProjectEntity!
}

type Mutation {
  changeDocument(documentId: String!, input: DocumentChangeInput!): DocumentEntity!
  changeProject(input: ProjectChangeInput!, projectId: String!): ProjectEntity!
  createConversation(documentId: String!, input: ConversationCreateInput!): ConversationEntity!
  createDocument(input: DocumentCreateInput!, projectId: String!): DocumentEntity!
  createInvite(input: InviteCreateInput!, projectId: String!): InviteEntity!
  createProject(input: ProjectCreateInput!): ProjectEntity!
  register(input: UserInputRegister!): UserTokenResponse!
}

type ProjectEntity {
  avatar: JSON!
  id: ID!
  name: String!
  user: UserEntity!
}

type Query {
  getConversation(conversationId: String!): ConversationEntity!
  getConversations(documentId: String!): [ConversationEntity!]!
  getDocument(documentId: String!): DocumentEntity!
  getDocuments(projectId: String!): [DocumentEntity!]!
  getInvite(inviteCode: String!): InviteEntity!
  getInvites(projectId: String!): [InviteEntity!]!
  getMe: UserEntity!
  getProject(projectId: String!): ProjectEntity!
  getProjects: [ProjectEntity!]!
  getTimeline(timelineId: String!): TimelineEntity!
  getTimelines(documentId: String!): [TimelineEntity!]!
  login(input: UserInputLogin!): UserTokenResponse!
  resendInvite(inviteId: String!): InviteEntity!
}

type Subscription {
  conversationCreated: ConversationEntity!
  documentChanged: DocumentEntity!
  documentCreated: DocumentEntity!
  projectChanged: ProjectEntity!
  projectCreated: ProjectEntity!
  timelineCreated: TimelineEntity!
}

type TimelineEntity {
  date: Date!
  eventName: String!
  id: ID!
}

type UserEntity {
  email: String!
  id: ID!
  isEmailConfirmed: Boolean!
  nickname: String!
  registeredDate: Date!
}

type UserTokenResponse {
  token: String!
}

input ConversationCreateInput {
  text: String!
}

input DocumentChangeInput {
  data: JSON
  dueDate: Date
  name: String
  priority: DocumentPriority
  status: DocumentStatus
}

input DocumentCreateInput {
  name: String!
}

input InviteCreateInput {
  invitedUserEmail: String!
}

input ProjectChangeInput {
  name: String!
}

input ProjectCreateInput {
  name: String!
}

input UserInputLogin {
  email: String!
  password: String!
}

input UserInputRegister {
  email: String!
  password: String!
}


"Date custom scalar type"
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON

"DocumentType custom scalar type"
scalar DocumentType

"DocumentPriority custom scalar type"
scalar DocumentPriority

"DocumentStatus custom scalar type"
scalar DocumentStatus